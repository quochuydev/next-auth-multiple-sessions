server {
  listen              443 ssl;
  server_name         app.example.local;
  ssl_certificate     localhost.crt;
  ssl_certificate_key localhost.key;
  keepalive_timeout   90;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_pass_header Set-Cookie;

  proxy_connect_timeout       500s; # time to open a connection to the proxy before we give up
  proxy_send_timeout          500s; # timeout for transmitting a request to the proxied server
  proxy_read_timeout          500s; # timeout for reading a response from the proxied server - did it send back anything before this has expired
  send_timeout                500s; # timeout for sending a response to the requesting client - note this isn't proxy_send_timeout, but the time between two successive write operations to the requesting client (ie. browser)
  reset_timedout_connection on;

  location /app1 {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_buffering off;

    sendfile off;
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
    proxy_no_cache 1;
    proxy_cache_bypass 1;

    proxy_pass http://host.docker.internal:3001;
  }

  location /app2 {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_buffering off;

    sendfile off;
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
    proxy_no_cache 1;
    proxy_cache_bypass 1;

    proxy_pass http://host.docker.internal:3002;
  }
}